//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""abf60dc4-38e4-445f-a63a-b605915323db"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ede7789c-0acd-42ad-a808-6efb594892d3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FastMove"",
                    ""type"": ""Button"",
                    ""id"": ""907ec624-9005-4fd1-b27f-baa6025f5ad6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftUp"",
                    ""type"": ""Button"",
                    ""id"": ""7b2112e8-09f4-4cd0-9bdc-796bb53f5b88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightUp"",
                    ""type"": ""Button"",
                    ""id"": ""177573f8-08cf-4d32-a4ee-de5de59cc24b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftDown"",
                    ""type"": ""Button"",
                    ""id"": ""1ba24cec-c574-4418-bfc7-509eab9ff170"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightDown"",
                    ""type"": ""Button"",
                    ""id"": ""dd729da7-07b7-49f8-835b-36248afc0524"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SingleUp"",
                    ""type"": ""Button"",
                    ""id"": ""e173635d-590c-46f9-9f3e-8b77ec9a316c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SingleDown"",
                    ""type"": ""Button"",
                    ""id"": ""a34b2e76-0631-4355-8eb3-95d8b0b4593c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VertFastMod"",
                    ""type"": ""Button"",
                    ""id"": ""00202cc1-e7d8-4e98-ab7c-ab4c96f3ab36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""933a344b-4a4b-4680-b14a-4f36e276f78b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2bbf93f1-7cc6-4682-84ac-c7f41c8937d0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2d6c7023-5d2f-45d1-801b-24d4d46e4501"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4abd4c72-e535-49d3-9931-73ffe0c504fd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e301d2b1-d3fd-458d-ab83-85841162cbaf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""1be2b4a8-96f1-4d95-8334-bbac94ae2094"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1f54f98b-16af-435b-b90e-047b13279556"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a28ff426-8d9e-471c-a845-6662fcfbf35e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ff3bd68-47d3-4e2d-9053-d557ced1f9ec"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8d3200ef-acb0-48a9-95f7-ef0afb38517d"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""f4203f7a-1436-4b3c-b82d-73cdcff7329f"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f0b85247-8e3a-4305-99a9-1fb88cd9aefe"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""584d0c09-a861-449a-aa01-c43f406695c4"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e959cfd0-f248-41df-92a4-317601f78e85"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f861bb87-f2de-4449-ba51-1c5af74ed206"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""78c86fe4-eb14-49ce-807f-44abf5962ebb"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""FastMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b640485-6fd1-4724-975b-38e0e7b945aa"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FastMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c432acd-1034-4ecf-a96c-93ab7fc91aec"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4edda530-4b25-4252-8471-170623d1953a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""756e6129-f13f-4ac6-adb2-1ddb57b59b41"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45427c07-3f9a-4ca6-98e6-553c7492da8d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f32d2aa-1aeb-40b6-9ebb-5f89535ebbdf"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SingleUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c563d77-7928-47e0-bd4f-a88e233b6df3"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SingleDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4557c57a-1a36-4d12-9ed5-b5b90d48c6da"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""VertFastMod"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera"",
            ""id"": ""aa42a6fc-d897-472a-9037-c76284303fc5"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""788a56bc-6580-4908-aa4a-4946d2ace036"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrows"",
                    ""id"": ""b87e547b-0c4b-4cc4-80dd-2c3c96bd1060"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f3cebc5b-afc7-4b20-b076-0b1312fff080"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d44108e5-0275-4bfb-b023-feb131cc968c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f6d74270-a7a3-47fe-8de2-de8d68ecfeeb"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d4ce5259-47f8-4c75-ba25-94a20b7aa91d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""f83396b7-6195-41fc-870e-dc02276bc56b"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""90135c78-5d8c-4d17-8ba7-9aad80793aa5"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b4f0dcb2-7b4d-4fb2-95fe-cbf8078bf307"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d899f4a3-91df-44ba-a972-53af677ad1a2"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9e1d1eb0-09d3-445d-88d7-4858fbb8c7bb"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Common"",
            ""id"": ""69cecf3f-6408-4b49-8b89-55c97cc02e6e"",
            ""actions"": [
                {
                    ""name"": ""MainAction"",
                    ""type"": ""Button"",
                    ""id"": ""3d0080ff-523b-4dcc-8ac5-c4c4a41ec85a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorAction"",
                    ""type"": ""Button"",
                    ""id"": ""30c96a13-6a2e-41bb-af59-83e3156ef167"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorActionHold"",
                    ""type"": ""Button"",
                    ""id"": ""9757473b-4b97-4471-9026-1f8f90607849"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyTargetSelection"",
                    ""type"": ""Button"",
                    ""id"": ""a269572e-b59e-4d03-9a5e-916544ee712c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a76a1c0a-45cb-4836-bfea-b666cac4f3ea"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinorAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f477672e-a5f2-4594-a265-1cd2e2381be3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MinorAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfe8f938-a524-4e2b-986a-0ba2731aa9ae"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AnyTargetSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3ba9fa6-1614-456d-90e6-846180f744eb"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AnyTargetSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05ca5829-303b-4a39-9def-b66ba26b0ace"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c1f378e-03ef-4e3f-9e39-274714fb46a5"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb717775-ce8d-41fc-8ba8-80bedff6cb56"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinorActionHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5eb52780-2bbb-491f-bfbd-0da8f49f1de7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MinorActionHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_FastMove = m_Player.FindAction("FastMove", throwIfNotFound: true);
        m_Player_LeftUp = m_Player.FindAction("LeftUp", throwIfNotFound: true);
        m_Player_RightUp = m_Player.FindAction("RightUp", throwIfNotFound: true);
        m_Player_LeftDown = m_Player.FindAction("LeftDown", throwIfNotFound: true);
        m_Player_RightDown = m_Player.FindAction("RightDown", throwIfNotFound: true);
        m_Player_SingleUp = m_Player.FindAction("SingleUp", throwIfNotFound: true);
        m_Player_SingleDown = m_Player.FindAction("SingleDown", throwIfNotFound: true);
        m_Player_VertFastMod = m_Player.FindAction("VertFastMod", throwIfNotFound: true);
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Move = m_Camera.FindAction("Move", throwIfNotFound: true);
        // Common
        m_Common = asset.FindActionMap("Common", throwIfNotFound: true);
        m_Common_MainAction = m_Common.FindAction("MainAction", throwIfNotFound: true);
        m_Common_MinorAction = m_Common.FindAction("MinorAction", throwIfNotFound: true);
        m_Common_MinorActionHold = m_Common.FindAction("MinorActionHold", throwIfNotFound: true);
        m_Common_AnyTargetSelection = m_Common.FindAction("AnyTargetSelection", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_FastMove;
    private readonly InputAction m_Player_LeftUp;
    private readonly InputAction m_Player_RightUp;
    private readonly InputAction m_Player_LeftDown;
    private readonly InputAction m_Player_RightDown;
    private readonly InputAction m_Player_SingleUp;
    private readonly InputAction m_Player_SingleDown;
    private readonly InputAction m_Player_VertFastMod;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @FastMove => m_Wrapper.m_Player_FastMove;
        public InputAction @LeftUp => m_Wrapper.m_Player_LeftUp;
        public InputAction @RightUp => m_Wrapper.m_Player_RightUp;
        public InputAction @LeftDown => m_Wrapper.m_Player_LeftDown;
        public InputAction @RightDown => m_Wrapper.m_Player_RightDown;
        public InputAction @SingleUp => m_Wrapper.m_Player_SingleUp;
        public InputAction @SingleDown => m_Wrapper.m_Player_SingleDown;
        public InputAction @VertFastMod => m_Wrapper.m_Player_VertFastMod;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @FastMove.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFastMove;
                @FastMove.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFastMove;
                @FastMove.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFastMove;
                @LeftUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftUp;
                @LeftUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftUp;
                @LeftUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftUp;
                @RightUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightUp;
                @RightUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightUp;
                @RightUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightUp;
                @LeftDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDown;
                @LeftDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDown;
                @LeftDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDown;
                @RightDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDown;
                @RightDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDown;
                @RightDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDown;
                @SingleUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleUp;
                @SingleUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleUp;
                @SingleUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleUp;
                @SingleDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleDown;
                @SingleDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleDown;
                @SingleDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleDown;
                @VertFastMod.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnVertFastMod;
                @VertFastMod.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnVertFastMod;
                @VertFastMod.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnVertFastMod;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @FastMove.started += instance.OnFastMove;
                @FastMove.performed += instance.OnFastMove;
                @FastMove.canceled += instance.OnFastMove;
                @LeftUp.started += instance.OnLeftUp;
                @LeftUp.performed += instance.OnLeftUp;
                @LeftUp.canceled += instance.OnLeftUp;
                @RightUp.started += instance.OnRightUp;
                @RightUp.performed += instance.OnRightUp;
                @RightUp.canceled += instance.OnRightUp;
                @LeftDown.started += instance.OnLeftDown;
                @LeftDown.performed += instance.OnLeftDown;
                @LeftDown.canceled += instance.OnLeftDown;
                @RightDown.started += instance.OnRightDown;
                @RightDown.performed += instance.OnRightDown;
                @RightDown.canceled += instance.OnRightDown;
                @SingleUp.started += instance.OnSingleUp;
                @SingleUp.performed += instance.OnSingleUp;
                @SingleUp.canceled += instance.OnSingleUp;
                @SingleDown.started += instance.OnSingleDown;
                @SingleDown.performed += instance.OnSingleDown;
                @SingleDown.canceled += instance.OnSingleDown;
                @VertFastMod.started += instance.OnVertFastMod;
                @VertFastMod.performed += instance.OnVertFastMod;
                @VertFastMod.canceled += instance.OnVertFastMod;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Camera
    private readonly InputActionMap m_Camera;
    private ICameraActions m_CameraActionsCallbackInterface;
    private readonly InputAction m_Camera_Move;
    public struct CameraActions
    {
        private @PlayerInput m_Wrapper;
        public CameraActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Camera_Move;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_CameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // Common
    private readonly InputActionMap m_Common;
    private ICommonActions m_CommonActionsCallbackInterface;
    private readonly InputAction m_Common_MainAction;
    private readonly InputAction m_Common_MinorAction;
    private readonly InputAction m_Common_MinorActionHold;
    private readonly InputAction m_Common_AnyTargetSelection;
    public struct CommonActions
    {
        private @PlayerInput m_Wrapper;
        public CommonActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainAction => m_Wrapper.m_Common_MainAction;
        public InputAction @MinorAction => m_Wrapper.m_Common_MinorAction;
        public InputAction @MinorActionHold => m_Wrapper.m_Common_MinorActionHold;
        public InputAction @AnyTargetSelection => m_Wrapper.m_Common_AnyTargetSelection;
        public InputActionMap Get() { return m_Wrapper.m_Common; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CommonActions set) { return set.Get(); }
        public void SetCallbacks(ICommonActions instance)
        {
            if (m_Wrapper.m_CommonActionsCallbackInterface != null)
            {
                @MainAction.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainAction;
                @MainAction.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainAction;
                @MainAction.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainAction;
                @MinorAction.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorAction;
                @MinorAction.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorAction;
                @MinorAction.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorAction;
                @MinorActionHold.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorActionHold;
                @MinorActionHold.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorActionHold;
                @MinorActionHold.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorActionHold;
                @AnyTargetSelection.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnAnyTargetSelection;
                @AnyTargetSelection.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnAnyTargetSelection;
                @AnyTargetSelection.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnAnyTargetSelection;
            }
            m_Wrapper.m_CommonActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MainAction.started += instance.OnMainAction;
                @MainAction.performed += instance.OnMainAction;
                @MainAction.canceled += instance.OnMainAction;
                @MinorAction.started += instance.OnMinorAction;
                @MinorAction.performed += instance.OnMinorAction;
                @MinorAction.canceled += instance.OnMinorAction;
                @MinorActionHold.started += instance.OnMinorActionHold;
                @MinorActionHold.performed += instance.OnMinorActionHold;
                @MinorActionHold.canceled += instance.OnMinorActionHold;
                @AnyTargetSelection.started += instance.OnAnyTargetSelection;
                @AnyTargetSelection.performed += instance.OnAnyTargetSelection;
                @AnyTargetSelection.canceled += instance.OnAnyTargetSelection;
            }
        }
    }
    public CommonActions @Common => new CommonActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFastMove(InputAction.CallbackContext context);
        void OnLeftUp(InputAction.CallbackContext context);
        void OnRightUp(InputAction.CallbackContext context);
        void OnLeftDown(InputAction.CallbackContext context);
        void OnRightDown(InputAction.CallbackContext context);
        void OnSingleUp(InputAction.CallbackContext context);
        void OnSingleDown(InputAction.CallbackContext context);
        void OnVertFastMod(InputAction.CallbackContext context);
    }
    public interface ICameraActions
    {
        void OnMove(InputAction.CallbackContext context);
    }
    public interface ICommonActions
    {
        void OnMainAction(InputAction.CallbackContext context);
        void OnMinorAction(InputAction.CallbackContext context);
        void OnMinorActionHold(InputAction.CallbackContext context);
        void OnAnyTargetSelection(InputAction.CallbackContext context);
    }
}
