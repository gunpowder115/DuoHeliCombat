//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""abf60dc4-38e4-445f-a63a-b605915323db"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ede7789c-0acd-42ad-a808-6efb594892d3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FastMove"",
                    ""type"": ""Button"",
                    ""id"": ""907ec624-9005-4fd1-b27f-baa6025f5ad6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftUp"",
                    ""type"": ""Button"",
                    ""id"": ""7b2112e8-09f4-4cd0-9bdc-796bb53f5b88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightUp"",
                    ""type"": ""Button"",
                    ""id"": ""177573f8-08cf-4d32-a4ee-de5de59cc24b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftDown"",
                    ""type"": ""Button"",
                    ""id"": ""1ba24cec-c574-4418-bfc7-509eab9ff170"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightDown"",
                    ""type"": ""Button"",
                    ""id"": ""dd729da7-07b7-49f8-835b-36248afc0524"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SingleUp"",
                    ""type"": ""Button"",
                    ""id"": ""e173635d-590c-46f9-9f3e-8b77ec9a316c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SingleDown"",
                    ""type"": ""Button"",
                    ""id"": ""a34b2e76-0631-4355-8eb3-95d8b0b4593c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""1be2b4a8-96f1-4d95-8334-bbac94ae2094"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1f54f98b-16af-435b-b90e-047b13279556"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a28ff426-8d9e-471c-a845-6662fcfbf35e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ff3bd68-47d3-4e2d-9053-d557ced1f9ec"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8d3200ef-acb0-48a9-95f7-ef0afb38517d"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""f4203f7a-1436-4b3c-b82d-73cdcff7329f"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f0b85247-8e3a-4305-99a9-1fb88cd9aefe"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""584d0c09-a861-449a-aa01-c43f406695c4"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e959cfd0-f248-41df-92a4-317601f78e85"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f861bb87-f2de-4449-ba51-1c5af74ed206"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""78c86fe4-eb14-49ce-807f-44abf5962ebb"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""FastMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b640485-6fd1-4724-975b-38e0e7b945aa"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FastMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c432acd-1034-4ecf-a96c-93ab7fc91aec"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4edda530-4b25-4252-8471-170623d1953a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""756e6129-f13f-4ac6-adb2-1ddb57b59b41"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45427c07-3f9a-4ca6-98e6-553c7492da8d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f32d2aa-1aeb-40b6-9ebb-5f89535ebbdf"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SingleUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c563d77-7928-47e0-bd4f-a88e233b6df3"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SingleDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera"",
            ""id"": ""aa42a6fc-d897-472a-9037-c76284303fc5"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""788a56bc-6580-4908-aa4a-4946d2ace036"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrows"",
                    ""id"": ""b87e547b-0c4b-4cc4-80dd-2c3c96bd1060"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f3cebc5b-afc7-4b20-b076-0b1312fff080"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d44108e5-0275-4bfb-b023-feb131cc968c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f6d74270-a7a3-47fe-8de2-de8d68ecfeeb"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d4ce5259-47f8-4c75-ba25-94a20b7aa91d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""f83396b7-6195-41fc-870e-dc02276bc56b"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""90135c78-5d8c-4d17-8ba7-9aad80793aa5"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b4f0dcb2-7b4d-4fb2-95fe-cbf8078bf307"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d899f4a3-91df-44ba-a972-53af677ad1a2"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9e1d1eb0-09d3-445d-88d7-4858fbb8c7bb"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Common"",
            ""id"": ""69cecf3f-6408-4b49-8b89-55c97cc02e6e"",
            ""actions"": [
                {
                    ""name"": ""MainAction"",
                    ""type"": ""Button"",
                    ""id"": ""3d0080ff-523b-4dcc-8ac5-c4c4a41ec85a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorAction"",
                    ""type"": ""Button"",
                    ""id"": ""30c96a13-6a2e-41bb-af59-83e3156ef167"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorActionHold"",
                    ""type"": ""Button"",
                    ""id"": ""9757473b-4b97-4471-9026-1f8f90607849"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyTargetSelection"",
                    ""type"": ""Button"",
                    ""id"": ""a269572e-b59e-4d03-9a5e-916544ee712c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a76a1c0a-45cb-4836-bfea-b666cac4f3ea"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinorAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f477672e-a5f2-4594-a265-1cd2e2381be3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MinorAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfe8f938-a524-4e2b-986a-0ba2731aa9ae"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AnyTargetSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3ba9fa6-1614-456d-90e6-846180f744eb"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AnyTargetSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05ca5829-303b-4a39-9def-b66ba26b0ace"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c1f378e-03ef-4e3f-9e39-274714fb46a5"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb717775-ce8d-41fc-8ba8-80bedff6cb56"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinorActionHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5eb52780-2bbb-491f-bfbd-0da8f49f1de7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MinorActionHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerKeyboard"",
            ""id"": ""16c67743-ff42-4fd0-8152-680d0dcb2483"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e74f0427-5ac6-4b48-8904-dae24677d2dc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FastMove"",
                    ""type"": ""Button"",
                    ""id"": ""065e8827-df63-4dd1-8a49-fc183071d535"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SingleUp"",
                    ""type"": ""Button"",
                    ""id"": ""05037095-01e7-46a6-9feb-d2445a10d6ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SingleDown"",
                    ""type"": ""Button"",
                    ""id"": ""f5b2c3a0-2cc0-4692-a732-372210a92e87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VertFastMod"",
                    ""type"": ""Button"",
                    ""id"": ""c608f25d-a851-4b4a-bf8b-a3f40a1704c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""05acf9f2-c9e2-4e1c-a36c-a6a33398d0f3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""be3fb37d-56b1-42d8-b55c-af90e0e30646"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""09304fff-53ac-4c67-9a43-af49f86367f7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""45194fcd-99fc-494e-a340-0bf40038f258"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""67ac9f27-d7a3-4d90-ade5-70b730431eba"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""28fe08a3-3e7e-42f1-856c-5d08bd31aa50"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""FastMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fd50ac6-d8f6-4c31-ba60-02518f77c3e0"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SingleUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bb5c838-b95a-458f-95c8-ed2fdbe0a1ef"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SingleDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7b9e4b2-3e6f-482a-aa73-fab20a389b0d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""VertFastMod"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerGamepad"",
            ""id"": ""9ae1726a-8b72-4019-8aba-97581a8d75c2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""f9c8a54b-340c-4739-9401-19f6c932cd87"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FastMove"",
                    ""type"": ""Button"",
                    ""id"": ""5ed3354e-e7ad-431a-a4bf-c507937b72ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftUp"",
                    ""type"": ""Button"",
                    ""id"": ""17e2e12e-8d7e-40c5-a8cb-f53fbfc6bb69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightUp"",
                    ""type"": ""Button"",
                    ""id"": ""23efe241-ab66-4120-add2-751b964c1db6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftDown"",
                    ""type"": ""Button"",
                    ""id"": ""7bf98a23-889e-4fd5-ada0-de564af7777e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightDown"",
                    ""type"": ""Button"",
                    ""id"": ""11e72158-e9c4-4f07-89a3-df776dcadf9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""4045af40-d50e-4b07-9737-804a32d88c49"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0d274d4c-cacc-4faa-a47b-62faa76448fc"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f61797ca-b39b-498f-a4c5-722c993f025b"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""61ffe23b-6b4c-4223-bc4b-f2295d562bcd"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4404acb4-40e2-468c-9052-8c8bd230d9cb"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""62ee5e13-90f4-4fde-aae9-0b56b5a43c54"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""299ebfbc-59f5-4b2d-8c56-eb150cf2cb13"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""77d517e1-8613-4b3f-a8e9-d658a2b3d73b"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ac2ec96-d7db-4684-9c41-88cd67f1c0f5"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b2eb4e17-d043-414c-b74a-d3b943b4f3db"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""df6961d0-590d-493f-9f0b-4c0ef1cdf1c4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FastMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""226fea4b-0a92-469e-ac10-be5c25967fa9"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""109b1235-30ee-45b6-a7ce-c696d5bfa7ea"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a124c2f-f15f-4ffe-85c6-15bc3626b1cc"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""574f701e-cd6f-4671-a885-c33e0187b1f9"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CameraKeyboard"",
            ""id"": ""2354cea1-ff5f-4f58-8212-1469b7c9837e"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""01178756-832f-4ae5-bb47-7acd587b2cf8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrows"",
                    ""id"": ""36fc7cc9-92f4-43b2-bf68-02b98409296e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a7e23577-1d87-454e-bd8a-652ff770251c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""588f4596-d9d4-4678-9899-1ab65a2fc768"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""56f311ef-e548-4441-9945-b4d15952c1fb"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""89f2acef-3278-49a4-9a13-9f0c4bdfaf67"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""CameraGamepad"",
            ""id"": ""399ca396-f151-4ddb-9794-787ef794fc3d"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""edc915f2-96b7-43d9-b852-f2b7a9baa08c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""289f9b6a-566a-4071-8e7e-220260fc1a5b"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5c8e327d-ad32-47d7-b106-4cbf5fc703a1"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d9f70cd9-789d-4085-a824-e51265b38521"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8aba23a5-03d5-4046-b364-395a1dca01cf"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1968674d-a77f-40ed-8ca5-cb9ed6562bb3"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""CommonKeyboard"",
            ""id"": ""243c5509-8faf-4da1-b698-8653f61ddcab"",
            ""actions"": [
                {
                    ""name"": ""MainAction"",
                    ""type"": ""Button"",
                    ""id"": ""37c3f4c7-54f5-4e8e-a857-4f12dcb2bf5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorAction"",
                    ""type"": ""Button"",
                    ""id"": ""0f18211b-c6e0-4857-bdc8-9972b70eb90b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorActionHold"",
                    ""type"": ""Button"",
                    ""id"": ""2c05b3c1-a01a-4fda-89ec-434d13dc4e49"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyTargetSelection"",
                    ""type"": ""Button"",
                    ""id"": ""b53dbe76-7087-48a2-8d10-82c7fe5ef14f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build_1"",
                    ""type"": ""Button"",
                    ""id"": ""93acb043-2e4d-4d93-8c5f-0269f591be7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build_2"",
                    ""type"": ""Button"",
                    ""id"": ""0e6f06e0-4aa0-4926-8c26-02237cd16f5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build_3"",
                    ""type"": ""Button"",
                    ""id"": ""6b87ef74-3e63-44ce-9415-0bf15987f117"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build_4"",
                    ""type"": ""Button"",
                    ""id"": ""2f880b62-62ca-4bf9-a051-bc1d70126e4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build_5"",
                    ""type"": ""Button"",
                    ""id"": ""48c58390-42b6-4690-ad2d-e445b858d4cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build_6"",
                    ""type"": ""Button"",
                    ""id"": ""abce3221-f2cc-41ce-a380-33b32ccd9dd0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltBuild_1"",
                    ""type"": ""Button"",
                    ""id"": ""bc565a50-0db1-40a4-b0e7-98cd86de01e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltBuild_2"",
                    ""type"": ""Button"",
                    ""id"": ""5f2636bc-629e-4f12-90d5-1e48168068d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltBuild_3"",
                    ""type"": ""Button"",
                    ""id"": ""64669ce8-2d90-4432-957b-f77af1cebaf4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltBuild_4"",
                    ""type"": ""Button"",
                    ""id"": ""24acefae-c99c-4646-8420-54b72c3734f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltBuild_5"",
                    ""type"": ""Button"",
                    ""id"": ""527caf45-fa7a-4569-825b-1a2e8655e298"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltBuild_6"",
                    ""type"": ""Button"",
                    ""id"": ""021c03a6-2381-441d-ae17-40ec1c0bb10f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Take"",
                    ""type"": ""Button"",
                    ""id"": ""d2236e42-7697-49f7-bea6-d14897661f9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rescue"",
                    ""type"": ""Button"",
                    ""id"": ""d54de779-5568-4c14-a1bc-767d45c1070c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bb1af0c7-d33d-4337-938d-2d6a080e4a50"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ec950d9-a163-48a2-a148-856e22c5738a"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinorAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bfa5918-d0fb-419f-906d-deebf428de00"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MinorActionHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""321a8a25-6cc8-4d07-ac4c-862e79edfc69"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AnyTargetSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cff8f7fb-882a-4828-bb4c-12b734b93f4e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Build_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aba9d905-a0e6-4b6f-bb6a-6982dbe67e91"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Build_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baa7750f-639c-4c1b-9c2a-3830e08c4e25"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Build_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4301ea40-ab3b-4c24-bcb4-f7293e6ffa94"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Build_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c769ba6c-f3ab-4953-aa10-9d9cc2b7e29d"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Build_5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""642624b7-c773-43b4-bd9a-a154567d482b"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Build_6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""475c90e2-f3ea-4583-8c78-d843a789a39e"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AltBuild_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e0cbf90-cf02-4da6-a94e-306987713c7f"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AltBuild_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""067f1960-c83f-4ae7-b3b2-96aec279d9f6"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AltBuild_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""671a854d-f710-42e7-9e72-7851d5a1a09c"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AltBuild_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e425c878-844e-49f4-9a1a-35c6ad06cfed"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AltBuild_5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbe60635-3dab-402e-8c81-7127d9d87fc1"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AltBuild_6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97ccdfdb-12e4-4191-9979-65a586f10906"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Take"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65587a42-60ea-489a-afdf-6aaaf24a31b1"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Rescue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CommonGamepad"",
            ""id"": ""c9e8ee49-472b-46be-afea-57d6e8c67596"",
            ""actions"": [
                {
                    ""name"": ""MainAction"",
                    ""type"": ""Button"",
                    ""id"": ""ed7af958-9197-455f-beec-507b5e50464b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorAction"",
                    ""type"": ""Button"",
                    ""id"": ""8f57d9aa-a044-446d-b10b-ddb4ab096cc7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MinorActionHold"",
                    ""type"": ""Button"",
                    ""id"": ""75da4f30-57d1-4439-a301-e4ac6278ffcd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyTargetSelection"",
                    ""type"": ""Button"",
                    ""id"": ""bbd0b028-8271-446c-a0fc-375aa20a90a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Take"",
                    ""type"": ""Button"",
                    ""id"": ""f859599a-fe04-4972-9a0f-4528a1ca3584"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rescue"",
                    ""type"": ""Button"",
                    ""id"": ""9f13b991-9448-4f63-9425-672706fa2cc1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""98b34e9c-820c-4a09-b7fd-7ca9ce9519af"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed42c228-553f-4907-80bb-d7822761899e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MinorAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""407572b0-9ae9-4280-820e-2c5b306b1af3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MinorActionHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5eb4a0c8-0101-4246-9d1c-a359a110f1b5"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AnyTargetSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9d95134-89e0-42ff-b9a5-1c175192d2dc"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Take"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc173136-e12b-4722-a17a-b037c14f9c24"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rescue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ViewportDebug"",
            ""id"": ""879e8656-d847-49ff-9532-0ae2d04f73e2"",
            ""actions"": [
                {
                    ""name"": ""ChangePlayer1"",
                    ""type"": ""Button"",
                    ""id"": ""1682026d-8c8d-4c87-a01f-3f2cc9f9ccff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangePlayer2"",
                    ""type"": ""Button"",
                    ""id"": ""ecc13d65-2c44-4fdd-9a3a-64cb96746fe1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeConfiguration"",
                    ""type"": ""Button"",
                    ""id"": ""8b881223-d773-4e10-a123-7c81dd3d124c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeOrientation"",
                    ""type"": ""Button"",
                    ""id"": ""e83bf052-535d-41d9-9ef0-592209618e0b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4f573bda-1cdb-4587-a971-8ff4b26d0b8a"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ChangePlayer1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96248c82-5b80-4777-b10e-98427eb1dee5"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ChangePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31351573-fa8f-42c5-9a8a-885e13b36d28"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ChangeConfiguration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b8511b7-bb46-4050-ae3d-cd0753f97adc"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ChangeOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Upgrade"",
            ""id"": ""74e96e03-8817-4c6b-922d-80117607d4b4"",
            ""actions"": [
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""3e19d072-49c1-496b-833c-55b2a13db480"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""d290eb14-3bb0-405e-a91a-8c8c297e1d7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""00dd2dea-e0a2-4abe-b445-207b124cc94a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""0b85f3fa-2f50-43a8-af15-07f11d2beb26"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""dafc3bf7-780b-406d-b868-7e6b18cefdfc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""1ecf5e13-76e7-4605-9b9a-ce8c70330fdd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""423d4cfc-8955-496e-8e50-2e411c49ec66"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91cb86bd-5169-4d99-9869-5cca299e2689"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15119780-dcf3-4954-84d3-9edb5d7543b6"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e73199e-80b4-4d74-8360-eea8478835cd"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76d8e5fb-d4a8-4c96-9c95-1ac91a32ed12"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80ce1ebb-22cc-4500-88cb-2d16829c0a20"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f48e43f-8e15-4b2b-9609-e5bc393d424f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fe0b29e-ca1c-42eb-b561-ab133efe1adb"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93d0367f-3273-48e6-a1ec-f57d18abc224"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e5c9aa9-0f7f-464e-8cde-14b488704365"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfd571b6-d92c-40e0-a84b-e69d8ad7b2fb"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b10dc2e1-9cbb-40c3-9dba-c7d48d9c0d73"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_FastMove = m_Player.FindAction("FastMove", throwIfNotFound: true);
        m_Player_LeftUp = m_Player.FindAction("LeftUp", throwIfNotFound: true);
        m_Player_RightUp = m_Player.FindAction("RightUp", throwIfNotFound: true);
        m_Player_LeftDown = m_Player.FindAction("LeftDown", throwIfNotFound: true);
        m_Player_RightDown = m_Player.FindAction("RightDown", throwIfNotFound: true);
        m_Player_SingleUp = m_Player.FindAction("SingleUp", throwIfNotFound: true);
        m_Player_SingleDown = m_Player.FindAction("SingleDown", throwIfNotFound: true);
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Move = m_Camera.FindAction("Move", throwIfNotFound: true);
        // Common
        m_Common = asset.FindActionMap("Common", throwIfNotFound: true);
        m_Common_MainAction = m_Common.FindAction("MainAction", throwIfNotFound: true);
        m_Common_MinorAction = m_Common.FindAction("MinorAction", throwIfNotFound: true);
        m_Common_MinorActionHold = m_Common.FindAction("MinorActionHold", throwIfNotFound: true);
        m_Common_AnyTargetSelection = m_Common.FindAction("AnyTargetSelection", throwIfNotFound: true);
        // PlayerKeyboard
        m_PlayerKeyboard = asset.FindActionMap("PlayerKeyboard", throwIfNotFound: true);
        m_PlayerKeyboard_Move = m_PlayerKeyboard.FindAction("Move", throwIfNotFound: true);
        m_PlayerKeyboard_FastMove = m_PlayerKeyboard.FindAction("FastMove", throwIfNotFound: true);
        m_PlayerKeyboard_SingleUp = m_PlayerKeyboard.FindAction("SingleUp", throwIfNotFound: true);
        m_PlayerKeyboard_SingleDown = m_PlayerKeyboard.FindAction("SingleDown", throwIfNotFound: true);
        m_PlayerKeyboard_VertFastMod = m_PlayerKeyboard.FindAction("VertFastMod", throwIfNotFound: true);
        // PlayerGamepad
        m_PlayerGamepad = asset.FindActionMap("PlayerGamepad", throwIfNotFound: true);
        m_PlayerGamepad_Move = m_PlayerGamepad.FindAction("Move", throwIfNotFound: true);
        m_PlayerGamepad_FastMove = m_PlayerGamepad.FindAction("FastMove", throwIfNotFound: true);
        m_PlayerGamepad_LeftUp = m_PlayerGamepad.FindAction("LeftUp", throwIfNotFound: true);
        m_PlayerGamepad_RightUp = m_PlayerGamepad.FindAction("RightUp", throwIfNotFound: true);
        m_PlayerGamepad_LeftDown = m_PlayerGamepad.FindAction("LeftDown", throwIfNotFound: true);
        m_PlayerGamepad_RightDown = m_PlayerGamepad.FindAction("RightDown", throwIfNotFound: true);
        // CameraKeyboard
        m_CameraKeyboard = asset.FindActionMap("CameraKeyboard", throwIfNotFound: true);
        m_CameraKeyboard_Move = m_CameraKeyboard.FindAction("Move", throwIfNotFound: true);
        // CameraGamepad
        m_CameraGamepad = asset.FindActionMap("CameraGamepad", throwIfNotFound: true);
        m_CameraGamepad_Move = m_CameraGamepad.FindAction("Move", throwIfNotFound: true);
        // CommonKeyboard
        m_CommonKeyboard = asset.FindActionMap("CommonKeyboard", throwIfNotFound: true);
        m_CommonKeyboard_MainAction = m_CommonKeyboard.FindAction("MainAction", throwIfNotFound: true);
        m_CommonKeyboard_MinorAction = m_CommonKeyboard.FindAction("MinorAction", throwIfNotFound: true);
        m_CommonKeyboard_MinorActionHold = m_CommonKeyboard.FindAction("MinorActionHold", throwIfNotFound: true);
        m_CommonKeyboard_AnyTargetSelection = m_CommonKeyboard.FindAction("AnyTargetSelection", throwIfNotFound: true);
        m_CommonKeyboard_Build_1 = m_CommonKeyboard.FindAction("Build_1", throwIfNotFound: true);
        m_CommonKeyboard_Build_2 = m_CommonKeyboard.FindAction("Build_2", throwIfNotFound: true);
        m_CommonKeyboard_Build_3 = m_CommonKeyboard.FindAction("Build_3", throwIfNotFound: true);
        m_CommonKeyboard_Build_4 = m_CommonKeyboard.FindAction("Build_4", throwIfNotFound: true);
        m_CommonKeyboard_Build_5 = m_CommonKeyboard.FindAction("Build_5", throwIfNotFound: true);
        m_CommonKeyboard_Build_6 = m_CommonKeyboard.FindAction("Build_6", throwIfNotFound: true);
        m_CommonKeyboard_AltBuild_1 = m_CommonKeyboard.FindAction("AltBuild_1", throwIfNotFound: true);
        m_CommonKeyboard_AltBuild_2 = m_CommonKeyboard.FindAction("AltBuild_2", throwIfNotFound: true);
        m_CommonKeyboard_AltBuild_3 = m_CommonKeyboard.FindAction("AltBuild_3", throwIfNotFound: true);
        m_CommonKeyboard_AltBuild_4 = m_CommonKeyboard.FindAction("AltBuild_4", throwIfNotFound: true);
        m_CommonKeyboard_AltBuild_5 = m_CommonKeyboard.FindAction("AltBuild_5", throwIfNotFound: true);
        m_CommonKeyboard_AltBuild_6 = m_CommonKeyboard.FindAction("AltBuild_6", throwIfNotFound: true);
        m_CommonKeyboard_Take = m_CommonKeyboard.FindAction("Take", throwIfNotFound: true);
        m_CommonKeyboard_Rescue = m_CommonKeyboard.FindAction("Rescue", throwIfNotFound: true);
        // CommonGamepad
        m_CommonGamepad = asset.FindActionMap("CommonGamepad", throwIfNotFound: true);
        m_CommonGamepad_MainAction = m_CommonGamepad.FindAction("MainAction", throwIfNotFound: true);
        m_CommonGamepad_MinorAction = m_CommonGamepad.FindAction("MinorAction", throwIfNotFound: true);
        m_CommonGamepad_MinorActionHold = m_CommonGamepad.FindAction("MinorActionHold", throwIfNotFound: true);
        m_CommonGamepad_AnyTargetSelection = m_CommonGamepad.FindAction("AnyTargetSelection", throwIfNotFound: true);
        m_CommonGamepad_Take = m_CommonGamepad.FindAction("Take", throwIfNotFound: true);
        m_CommonGamepad_Rescue = m_CommonGamepad.FindAction("Rescue", throwIfNotFound: true);
        // ViewportDebug
        m_ViewportDebug = asset.FindActionMap("ViewportDebug", throwIfNotFound: true);
        m_ViewportDebug_ChangePlayer1 = m_ViewportDebug.FindAction("ChangePlayer1", throwIfNotFound: true);
        m_ViewportDebug_ChangePlayer2 = m_ViewportDebug.FindAction("ChangePlayer2", throwIfNotFound: true);
        m_ViewportDebug_ChangeConfiguration = m_ViewportDebug.FindAction("ChangeConfiguration", throwIfNotFound: true);
        m_ViewportDebug_ChangeOrientation = m_ViewportDebug.FindAction("ChangeOrientation", throwIfNotFound: true);
        // Upgrade
        m_Upgrade = asset.FindActionMap("Upgrade", throwIfNotFound: true);
        m_Upgrade_Up = m_Upgrade.FindAction("Up", throwIfNotFound: true);
        m_Upgrade_Down = m_Upgrade.FindAction("Down", throwIfNotFound: true);
        m_Upgrade_Left = m_Upgrade.FindAction("Left", throwIfNotFound: true);
        m_Upgrade_Right = m_Upgrade.FindAction("Right", throwIfNotFound: true);
        m_Upgrade_Select = m_Upgrade.FindAction("Select", throwIfNotFound: true);
        m_Upgrade_Cancel = m_Upgrade.FindAction("Cancel", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_FastMove;
    private readonly InputAction m_Player_LeftUp;
    private readonly InputAction m_Player_RightUp;
    private readonly InputAction m_Player_LeftDown;
    private readonly InputAction m_Player_RightDown;
    private readonly InputAction m_Player_SingleUp;
    private readonly InputAction m_Player_SingleDown;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @FastMove => m_Wrapper.m_Player_FastMove;
        public InputAction @LeftUp => m_Wrapper.m_Player_LeftUp;
        public InputAction @RightUp => m_Wrapper.m_Player_RightUp;
        public InputAction @LeftDown => m_Wrapper.m_Player_LeftDown;
        public InputAction @RightDown => m_Wrapper.m_Player_RightDown;
        public InputAction @SingleUp => m_Wrapper.m_Player_SingleUp;
        public InputAction @SingleDown => m_Wrapper.m_Player_SingleDown;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @FastMove.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFastMove;
                @FastMove.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFastMove;
                @FastMove.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFastMove;
                @LeftUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftUp;
                @LeftUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftUp;
                @LeftUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftUp;
                @RightUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightUp;
                @RightUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightUp;
                @RightUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightUp;
                @LeftDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDown;
                @LeftDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDown;
                @LeftDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftDown;
                @RightDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDown;
                @RightDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDown;
                @RightDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightDown;
                @SingleUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleUp;
                @SingleUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleUp;
                @SingleUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleUp;
                @SingleDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleDown;
                @SingleDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleDown;
                @SingleDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSingleDown;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @FastMove.started += instance.OnFastMove;
                @FastMove.performed += instance.OnFastMove;
                @FastMove.canceled += instance.OnFastMove;
                @LeftUp.started += instance.OnLeftUp;
                @LeftUp.performed += instance.OnLeftUp;
                @LeftUp.canceled += instance.OnLeftUp;
                @RightUp.started += instance.OnRightUp;
                @RightUp.performed += instance.OnRightUp;
                @RightUp.canceled += instance.OnRightUp;
                @LeftDown.started += instance.OnLeftDown;
                @LeftDown.performed += instance.OnLeftDown;
                @LeftDown.canceled += instance.OnLeftDown;
                @RightDown.started += instance.OnRightDown;
                @RightDown.performed += instance.OnRightDown;
                @RightDown.canceled += instance.OnRightDown;
                @SingleUp.started += instance.OnSingleUp;
                @SingleUp.performed += instance.OnSingleUp;
                @SingleUp.canceled += instance.OnSingleUp;
                @SingleDown.started += instance.OnSingleDown;
                @SingleDown.performed += instance.OnSingleDown;
                @SingleDown.canceled += instance.OnSingleDown;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Camera
    private readonly InputActionMap m_Camera;
    private ICameraActions m_CameraActionsCallbackInterface;
    private readonly InputAction m_Camera_Move;
    public struct CameraActions
    {
        private @PlayerInput m_Wrapper;
        public CameraActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Camera_Move;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_CameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // Common
    private readonly InputActionMap m_Common;
    private ICommonActions m_CommonActionsCallbackInterface;
    private readonly InputAction m_Common_MainAction;
    private readonly InputAction m_Common_MinorAction;
    private readonly InputAction m_Common_MinorActionHold;
    private readonly InputAction m_Common_AnyTargetSelection;
    public struct CommonActions
    {
        private @PlayerInput m_Wrapper;
        public CommonActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainAction => m_Wrapper.m_Common_MainAction;
        public InputAction @MinorAction => m_Wrapper.m_Common_MinorAction;
        public InputAction @MinorActionHold => m_Wrapper.m_Common_MinorActionHold;
        public InputAction @AnyTargetSelection => m_Wrapper.m_Common_AnyTargetSelection;
        public InputActionMap Get() { return m_Wrapper.m_Common; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CommonActions set) { return set.Get(); }
        public void SetCallbacks(ICommonActions instance)
        {
            if (m_Wrapper.m_CommonActionsCallbackInterface != null)
            {
                @MainAction.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainAction;
                @MainAction.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainAction;
                @MainAction.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainAction;
                @MinorAction.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorAction;
                @MinorAction.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorAction;
                @MinorAction.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorAction;
                @MinorActionHold.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorActionHold;
                @MinorActionHold.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorActionHold;
                @MinorActionHold.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMinorActionHold;
                @AnyTargetSelection.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnAnyTargetSelection;
                @AnyTargetSelection.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnAnyTargetSelection;
                @AnyTargetSelection.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnAnyTargetSelection;
            }
            m_Wrapper.m_CommonActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MainAction.started += instance.OnMainAction;
                @MainAction.performed += instance.OnMainAction;
                @MainAction.canceled += instance.OnMainAction;
                @MinorAction.started += instance.OnMinorAction;
                @MinorAction.performed += instance.OnMinorAction;
                @MinorAction.canceled += instance.OnMinorAction;
                @MinorActionHold.started += instance.OnMinorActionHold;
                @MinorActionHold.performed += instance.OnMinorActionHold;
                @MinorActionHold.canceled += instance.OnMinorActionHold;
                @AnyTargetSelection.started += instance.OnAnyTargetSelection;
                @AnyTargetSelection.performed += instance.OnAnyTargetSelection;
                @AnyTargetSelection.canceled += instance.OnAnyTargetSelection;
            }
        }
    }
    public CommonActions @Common => new CommonActions(this);

    // PlayerKeyboard
    private readonly InputActionMap m_PlayerKeyboard;
    private IPlayerKeyboardActions m_PlayerKeyboardActionsCallbackInterface;
    private readonly InputAction m_PlayerKeyboard_Move;
    private readonly InputAction m_PlayerKeyboard_FastMove;
    private readonly InputAction m_PlayerKeyboard_SingleUp;
    private readonly InputAction m_PlayerKeyboard_SingleDown;
    private readonly InputAction m_PlayerKeyboard_VertFastMod;
    public struct PlayerKeyboardActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerKeyboardActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerKeyboard_Move;
        public InputAction @FastMove => m_Wrapper.m_PlayerKeyboard_FastMove;
        public InputAction @SingleUp => m_Wrapper.m_PlayerKeyboard_SingleUp;
        public InputAction @SingleDown => m_Wrapper.m_PlayerKeyboard_SingleDown;
        public InputAction @VertFastMod => m_Wrapper.m_PlayerKeyboard_VertFastMod;
        public InputActionMap Get() { return m_Wrapper.m_PlayerKeyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerKeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerKeyboardActions instance)
        {
            if (m_Wrapper.m_PlayerKeyboardActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnMove;
                @FastMove.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnFastMove;
                @FastMove.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnFastMove;
                @FastMove.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnFastMove;
                @SingleUp.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnSingleUp;
                @SingleUp.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnSingleUp;
                @SingleUp.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnSingleUp;
                @SingleDown.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnSingleDown;
                @SingleDown.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnSingleDown;
                @SingleDown.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnSingleDown;
                @VertFastMod.started -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnVertFastMod;
                @VertFastMod.performed -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnVertFastMod;
                @VertFastMod.canceled -= m_Wrapper.m_PlayerKeyboardActionsCallbackInterface.OnVertFastMod;
            }
            m_Wrapper.m_PlayerKeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @FastMove.started += instance.OnFastMove;
                @FastMove.performed += instance.OnFastMove;
                @FastMove.canceled += instance.OnFastMove;
                @SingleUp.started += instance.OnSingleUp;
                @SingleUp.performed += instance.OnSingleUp;
                @SingleUp.canceled += instance.OnSingleUp;
                @SingleDown.started += instance.OnSingleDown;
                @SingleDown.performed += instance.OnSingleDown;
                @SingleDown.canceled += instance.OnSingleDown;
                @VertFastMod.started += instance.OnVertFastMod;
                @VertFastMod.performed += instance.OnVertFastMod;
                @VertFastMod.canceled += instance.OnVertFastMod;
            }
        }
    }
    public PlayerKeyboardActions @PlayerKeyboard => new PlayerKeyboardActions(this);

    // PlayerGamepad
    private readonly InputActionMap m_PlayerGamepad;
    private IPlayerGamepadActions m_PlayerGamepadActionsCallbackInterface;
    private readonly InputAction m_PlayerGamepad_Move;
    private readonly InputAction m_PlayerGamepad_FastMove;
    private readonly InputAction m_PlayerGamepad_LeftUp;
    private readonly InputAction m_PlayerGamepad_RightUp;
    private readonly InputAction m_PlayerGamepad_LeftDown;
    private readonly InputAction m_PlayerGamepad_RightDown;
    public struct PlayerGamepadActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerGamepadActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerGamepad_Move;
        public InputAction @FastMove => m_Wrapper.m_PlayerGamepad_FastMove;
        public InputAction @LeftUp => m_Wrapper.m_PlayerGamepad_LeftUp;
        public InputAction @RightUp => m_Wrapper.m_PlayerGamepad_RightUp;
        public InputAction @LeftDown => m_Wrapper.m_PlayerGamepad_LeftDown;
        public InputAction @RightDown => m_Wrapper.m_PlayerGamepad_RightDown;
        public InputActionMap Get() { return m_Wrapper.m_PlayerGamepad; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerGamepadActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerGamepadActions instance)
        {
            if (m_Wrapper.m_PlayerGamepadActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnMove;
                @FastMove.started -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnFastMove;
                @FastMove.performed -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnFastMove;
                @FastMove.canceled -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnFastMove;
                @LeftUp.started -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnLeftUp;
                @LeftUp.performed -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnLeftUp;
                @LeftUp.canceled -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnLeftUp;
                @RightUp.started -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnRightUp;
                @RightUp.performed -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnRightUp;
                @RightUp.canceled -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnRightUp;
                @LeftDown.started -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnLeftDown;
                @LeftDown.performed -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnLeftDown;
                @LeftDown.canceled -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnLeftDown;
                @RightDown.started -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnRightDown;
                @RightDown.performed -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnRightDown;
                @RightDown.canceled -= m_Wrapper.m_PlayerGamepadActionsCallbackInterface.OnRightDown;
            }
            m_Wrapper.m_PlayerGamepadActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @FastMove.started += instance.OnFastMove;
                @FastMove.performed += instance.OnFastMove;
                @FastMove.canceled += instance.OnFastMove;
                @LeftUp.started += instance.OnLeftUp;
                @LeftUp.performed += instance.OnLeftUp;
                @LeftUp.canceled += instance.OnLeftUp;
                @RightUp.started += instance.OnRightUp;
                @RightUp.performed += instance.OnRightUp;
                @RightUp.canceled += instance.OnRightUp;
                @LeftDown.started += instance.OnLeftDown;
                @LeftDown.performed += instance.OnLeftDown;
                @LeftDown.canceled += instance.OnLeftDown;
                @RightDown.started += instance.OnRightDown;
                @RightDown.performed += instance.OnRightDown;
                @RightDown.canceled += instance.OnRightDown;
            }
        }
    }
    public PlayerGamepadActions @PlayerGamepad => new PlayerGamepadActions(this);

    // CameraKeyboard
    private readonly InputActionMap m_CameraKeyboard;
    private ICameraKeyboardActions m_CameraKeyboardActionsCallbackInterface;
    private readonly InputAction m_CameraKeyboard_Move;
    public struct CameraKeyboardActions
    {
        private @PlayerInput m_Wrapper;
        public CameraKeyboardActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_CameraKeyboard_Move;
        public InputActionMap Get() { return m_Wrapper.m_CameraKeyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraKeyboardActions set) { return set.Get(); }
        public void SetCallbacks(ICameraKeyboardActions instance)
        {
            if (m_Wrapper.m_CameraKeyboardActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CameraKeyboardActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CameraKeyboardActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CameraKeyboardActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_CameraKeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public CameraKeyboardActions @CameraKeyboard => new CameraKeyboardActions(this);

    // CameraGamepad
    private readonly InputActionMap m_CameraGamepad;
    private ICameraGamepadActions m_CameraGamepadActionsCallbackInterface;
    private readonly InputAction m_CameraGamepad_Move;
    public struct CameraGamepadActions
    {
        private @PlayerInput m_Wrapper;
        public CameraGamepadActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_CameraGamepad_Move;
        public InputActionMap Get() { return m_Wrapper.m_CameraGamepad; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraGamepadActions set) { return set.Get(); }
        public void SetCallbacks(ICameraGamepadActions instance)
        {
            if (m_Wrapper.m_CameraGamepadActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CameraGamepadActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CameraGamepadActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CameraGamepadActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_CameraGamepadActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public CameraGamepadActions @CameraGamepad => new CameraGamepadActions(this);

    // CommonKeyboard
    private readonly InputActionMap m_CommonKeyboard;
    private ICommonKeyboardActions m_CommonKeyboardActionsCallbackInterface;
    private readonly InputAction m_CommonKeyboard_MainAction;
    private readonly InputAction m_CommonKeyboard_MinorAction;
    private readonly InputAction m_CommonKeyboard_MinorActionHold;
    private readonly InputAction m_CommonKeyboard_AnyTargetSelection;
    private readonly InputAction m_CommonKeyboard_Build_1;
    private readonly InputAction m_CommonKeyboard_Build_2;
    private readonly InputAction m_CommonKeyboard_Build_3;
    private readonly InputAction m_CommonKeyboard_Build_4;
    private readonly InputAction m_CommonKeyboard_Build_5;
    private readonly InputAction m_CommonKeyboard_Build_6;
    private readonly InputAction m_CommonKeyboard_AltBuild_1;
    private readonly InputAction m_CommonKeyboard_AltBuild_2;
    private readonly InputAction m_CommonKeyboard_AltBuild_3;
    private readonly InputAction m_CommonKeyboard_AltBuild_4;
    private readonly InputAction m_CommonKeyboard_AltBuild_5;
    private readonly InputAction m_CommonKeyboard_AltBuild_6;
    private readonly InputAction m_CommonKeyboard_Take;
    private readonly InputAction m_CommonKeyboard_Rescue;
    public struct CommonKeyboardActions
    {
        private @PlayerInput m_Wrapper;
        public CommonKeyboardActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainAction => m_Wrapper.m_CommonKeyboard_MainAction;
        public InputAction @MinorAction => m_Wrapper.m_CommonKeyboard_MinorAction;
        public InputAction @MinorActionHold => m_Wrapper.m_CommonKeyboard_MinorActionHold;
        public InputAction @AnyTargetSelection => m_Wrapper.m_CommonKeyboard_AnyTargetSelection;
        public InputAction @Build_1 => m_Wrapper.m_CommonKeyboard_Build_1;
        public InputAction @Build_2 => m_Wrapper.m_CommonKeyboard_Build_2;
        public InputAction @Build_3 => m_Wrapper.m_CommonKeyboard_Build_3;
        public InputAction @Build_4 => m_Wrapper.m_CommonKeyboard_Build_4;
        public InputAction @Build_5 => m_Wrapper.m_CommonKeyboard_Build_5;
        public InputAction @Build_6 => m_Wrapper.m_CommonKeyboard_Build_6;
        public InputAction @AltBuild_1 => m_Wrapper.m_CommonKeyboard_AltBuild_1;
        public InputAction @AltBuild_2 => m_Wrapper.m_CommonKeyboard_AltBuild_2;
        public InputAction @AltBuild_3 => m_Wrapper.m_CommonKeyboard_AltBuild_3;
        public InputAction @AltBuild_4 => m_Wrapper.m_CommonKeyboard_AltBuild_4;
        public InputAction @AltBuild_5 => m_Wrapper.m_CommonKeyboard_AltBuild_5;
        public InputAction @AltBuild_6 => m_Wrapper.m_CommonKeyboard_AltBuild_6;
        public InputAction @Take => m_Wrapper.m_CommonKeyboard_Take;
        public InputAction @Rescue => m_Wrapper.m_CommonKeyboard_Rescue;
        public InputActionMap Get() { return m_Wrapper.m_CommonKeyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CommonKeyboardActions set) { return set.Get(); }
        public void SetCallbacks(ICommonKeyboardActions instance)
        {
            if (m_Wrapper.m_CommonKeyboardActionsCallbackInterface != null)
            {
                @MainAction.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMainAction;
                @MainAction.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMainAction;
                @MainAction.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMainAction;
                @MinorAction.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMinorAction;
                @MinorAction.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMinorAction;
                @MinorAction.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMinorAction;
                @MinorActionHold.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMinorActionHold;
                @MinorActionHold.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMinorActionHold;
                @MinorActionHold.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnMinorActionHold;
                @AnyTargetSelection.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAnyTargetSelection;
                @AnyTargetSelection.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAnyTargetSelection;
                @AnyTargetSelection.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAnyTargetSelection;
                @Build_1.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_1;
                @Build_1.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_1;
                @Build_1.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_1;
                @Build_2.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_2;
                @Build_2.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_2;
                @Build_2.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_2;
                @Build_3.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_3;
                @Build_3.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_3;
                @Build_3.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_3;
                @Build_4.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_4;
                @Build_4.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_4;
                @Build_4.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_4;
                @Build_5.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_5;
                @Build_5.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_5;
                @Build_5.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_5;
                @Build_6.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_6;
                @Build_6.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_6;
                @Build_6.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnBuild_6;
                @AltBuild_1.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_1;
                @AltBuild_1.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_1;
                @AltBuild_1.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_1;
                @AltBuild_2.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_2;
                @AltBuild_2.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_2;
                @AltBuild_2.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_2;
                @AltBuild_3.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_3;
                @AltBuild_3.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_3;
                @AltBuild_3.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_3;
                @AltBuild_4.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_4;
                @AltBuild_4.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_4;
                @AltBuild_4.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_4;
                @AltBuild_5.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_5;
                @AltBuild_5.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_5;
                @AltBuild_5.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_5;
                @AltBuild_6.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_6;
                @AltBuild_6.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_6;
                @AltBuild_6.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnAltBuild_6;
                @Take.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnTake;
                @Take.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnTake;
                @Take.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnTake;
                @Rescue.started -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnRescue;
                @Rescue.performed -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnRescue;
                @Rescue.canceled -= m_Wrapper.m_CommonKeyboardActionsCallbackInterface.OnRescue;
            }
            m_Wrapper.m_CommonKeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MainAction.started += instance.OnMainAction;
                @MainAction.performed += instance.OnMainAction;
                @MainAction.canceled += instance.OnMainAction;
                @MinorAction.started += instance.OnMinorAction;
                @MinorAction.performed += instance.OnMinorAction;
                @MinorAction.canceled += instance.OnMinorAction;
                @MinorActionHold.started += instance.OnMinorActionHold;
                @MinorActionHold.performed += instance.OnMinorActionHold;
                @MinorActionHold.canceled += instance.OnMinorActionHold;
                @AnyTargetSelection.started += instance.OnAnyTargetSelection;
                @AnyTargetSelection.performed += instance.OnAnyTargetSelection;
                @AnyTargetSelection.canceled += instance.OnAnyTargetSelection;
                @Build_1.started += instance.OnBuild_1;
                @Build_1.performed += instance.OnBuild_1;
                @Build_1.canceled += instance.OnBuild_1;
                @Build_2.started += instance.OnBuild_2;
                @Build_2.performed += instance.OnBuild_2;
                @Build_2.canceled += instance.OnBuild_2;
                @Build_3.started += instance.OnBuild_3;
                @Build_3.performed += instance.OnBuild_3;
                @Build_3.canceled += instance.OnBuild_3;
                @Build_4.started += instance.OnBuild_4;
                @Build_4.performed += instance.OnBuild_4;
                @Build_4.canceled += instance.OnBuild_4;
                @Build_5.started += instance.OnBuild_5;
                @Build_5.performed += instance.OnBuild_5;
                @Build_5.canceled += instance.OnBuild_5;
                @Build_6.started += instance.OnBuild_6;
                @Build_6.performed += instance.OnBuild_6;
                @Build_6.canceled += instance.OnBuild_6;
                @AltBuild_1.started += instance.OnAltBuild_1;
                @AltBuild_1.performed += instance.OnAltBuild_1;
                @AltBuild_1.canceled += instance.OnAltBuild_1;
                @AltBuild_2.started += instance.OnAltBuild_2;
                @AltBuild_2.performed += instance.OnAltBuild_2;
                @AltBuild_2.canceled += instance.OnAltBuild_2;
                @AltBuild_3.started += instance.OnAltBuild_3;
                @AltBuild_3.performed += instance.OnAltBuild_3;
                @AltBuild_3.canceled += instance.OnAltBuild_3;
                @AltBuild_4.started += instance.OnAltBuild_4;
                @AltBuild_4.performed += instance.OnAltBuild_4;
                @AltBuild_4.canceled += instance.OnAltBuild_4;
                @AltBuild_5.started += instance.OnAltBuild_5;
                @AltBuild_5.performed += instance.OnAltBuild_5;
                @AltBuild_5.canceled += instance.OnAltBuild_5;
                @AltBuild_6.started += instance.OnAltBuild_6;
                @AltBuild_6.performed += instance.OnAltBuild_6;
                @AltBuild_6.canceled += instance.OnAltBuild_6;
                @Take.started += instance.OnTake;
                @Take.performed += instance.OnTake;
                @Take.canceled += instance.OnTake;
                @Rescue.started += instance.OnRescue;
                @Rescue.performed += instance.OnRescue;
                @Rescue.canceled += instance.OnRescue;
            }
        }
    }
    public CommonKeyboardActions @CommonKeyboard => new CommonKeyboardActions(this);

    // CommonGamepad
    private readonly InputActionMap m_CommonGamepad;
    private ICommonGamepadActions m_CommonGamepadActionsCallbackInterface;
    private readonly InputAction m_CommonGamepad_MainAction;
    private readonly InputAction m_CommonGamepad_MinorAction;
    private readonly InputAction m_CommonGamepad_MinorActionHold;
    private readonly InputAction m_CommonGamepad_AnyTargetSelection;
    private readonly InputAction m_CommonGamepad_Take;
    private readonly InputAction m_CommonGamepad_Rescue;
    public struct CommonGamepadActions
    {
        private @PlayerInput m_Wrapper;
        public CommonGamepadActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainAction => m_Wrapper.m_CommonGamepad_MainAction;
        public InputAction @MinorAction => m_Wrapper.m_CommonGamepad_MinorAction;
        public InputAction @MinorActionHold => m_Wrapper.m_CommonGamepad_MinorActionHold;
        public InputAction @AnyTargetSelection => m_Wrapper.m_CommonGamepad_AnyTargetSelection;
        public InputAction @Take => m_Wrapper.m_CommonGamepad_Take;
        public InputAction @Rescue => m_Wrapper.m_CommonGamepad_Rescue;
        public InputActionMap Get() { return m_Wrapper.m_CommonGamepad; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CommonGamepadActions set) { return set.Get(); }
        public void SetCallbacks(ICommonGamepadActions instance)
        {
            if (m_Wrapper.m_CommonGamepadActionsCallbackInterface != null)
            {
                @MainAction.started -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMainAction;
                @MainAction.performed -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMainAction;
                @MainAction.canceled -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMainAction;
                @MinorAction.started -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMinorAction;
                @MinorAction.performed -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMinorAction;
                @MinorAction.canceled -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMinorAction;
                @MinorActionHold.started -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMinorActionHold;
                @MinorActionHold.performed -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMinorActionHold;
                @MinorActionHold.canceled -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnMinorActionHold;
                @AnyTargetSelection.started -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnAnyTargetSelection;
                @AnyTargetSelection.performed -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnAnyTargetSelection;
                @AnyTargetSelection.canceled -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnAnyTargetSelection;
                @Take.started -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnTake;
                @Take.performed -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnTake;
                @Take.canceled -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnTake;
                @Rescue.started -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnRescue;
                @Rescue.performed -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnRescue;
                @Rescue.canceled -= m_Wrapper.m_CommonGamepadActionsCallbackInterface.OnRescue;
            }
            m_Wrapper.m_CommonGamepadActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MainAction.started += instance.OnMainAction;
                @MainAction.performed += instance.OnMainAction;
                @MainAction.canceled += instance.OnMainAction;
                @MinorAction.started += instance.OnMinorAction;
                @MinorAction.performed += instance.OnMinorAction;
                @MinorAction.canceled += instance.OnMinorAction;
                @MinorActionHold.started += instance.OnMinorActionHold;
                @MinorActionHold.performed += instance.OnMinorActionHold;
                @MinorActionHold.canceled += instance.OnMinorActionHold;
                @AnyTargetSelection.started += instance.OnAnyTargetSelection;
                @AnyTargetSelection.performed += instance.OnAnyTargetSelection;
                @AnyTargetSelection.canceled += instance.OnAnyTargetSelection;
                @Take.started += instance.OnTake;
                @Take.performed += instance.OnTake;
                @Take.canceled += instance.OnTake;
                @Rescue.started += instance.OnRescue;
                @Rescue.performed += instance.OnRescue;
                @Rescue.canceled += instance.OnRescue;
            }
        }
    }
    public CommonGamepadActions @CommonGamepad => new CommonGamepadActions(this);

    // ViewportDebug
    private readonly InputActionMap m_ViewportDebug;
    private IViewportDebugActions m_ViewportDebugActionsCallbackInterface;
    private readonly InputAction m_ViewportDebug_ChangePlayer1;
    private readonly InputAction m_ViewportDebug_ChangePlayer2;
    private readonly InputAction m_ViewportDebug_ChangeConfiguration;
    private readonly InputAction m_ViewportDebug_ChangeOrientation;
    public struct ViewportDebugActions
    {
        private @PlayerInput m_Wrapper;
        public ViewportDebugActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ChangePlayer1 => m_Wrapper.m_ViewportDebug_ChangePlayer1;
        public InputAction @ChangePlayer2 => m_Wrapper.m_ViewportDebug_ChangePlayer2;
        public InputAction @ChangeConfiguration => m_Wrapper.m_ViewportDebug_ChangeConfiguration;
        public InputAction @ChangeOrientation => m_Wrapper.m_ViewportDebug_ChangeOrientation;
        public InputActionMap Get() { return m_Wrapper.m_ViewportDebug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ViewportDebugActions set) { return set.Get(); }
        public void SetCallbacks(IViewportDebugActions instance)
        {
            if (m_Wrapper.m_ViewportDebugActionsCallbackInterface != null)
            {
                @ChangePlayer1.started -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangePlayer1;
                @ChangePlayer1.performed -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangePlayer1;
                @ChangePlayer1.canceled -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangePlayer1;
                @ChangePlayer2.started -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangePlayer2;
                @ChangePlayer2.performed -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangePlayer2;
                @ChangePlayer2.canceled -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangePlayer2;
                @ChangeConfiguration.started -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangeConfiguration;
                @ChangeConfiguration.performed -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangeConfiguration;
                @ChangeConfiguration.canceled -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangeConfiguration;
                @ChangeOrientation.started -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangeOrientation;
                @ChangeOrientation.performed -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangeOrientation;
                @ChangeOrientation.canceled -= m_Wrapper.m_ViewportDebugActionsCallbackInterface.OnChangeOrientation;
            }
            m_Wrapper.m_ViewportDebugActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ChangePlayer1.started += instance.OnChangePlayer1;
                @ChangePlayer1.performed += instance.OnChangePlayer1;
                @ChangePlayer1.canceled += instance.OnChangePlayer1;
                @ChangePlayer2.started += instance.OnChangePlayer2;
                @ChangePlayer2.performed += instance.OnChangePlayer2;
                @ChangePlayer2.canceled += instance.OnChangePlayer2;
                @ChangeConfiguration.started += instance.OnChangeConfiguration;
                @ChangeConfiguration.performed += instance.OnChangeConfiguration;
                @ChangeConfiguration.canceled += instance.OnChangeConfiguration;
                @ChangeOrientation.started += instance.OnChangeOrientation;
                @ChangeOrientation.performed += instance.OnChangeOrientation;
                @ChangeOrientation.canceled += instance.OnChangeOrientation;
            }
        }
    }
    public ViewportDebugActions @ViewportDebug => new ViewportDebugActions(this);

    // Upgrade
    private readonly InputActionMap m_Upgrade;
    private IUpgradeActions m_UpgradeActionsCallbackInterface;
    private readonly InputAction m_Upgrade_Up;
    private readonly InputAction m_Upgrade_Down;
    private readonly InputAction m_Upgrade_Left;
    private readonly InputAction m_Upgrade_Right;
    private readonly InputAction m_Upgrade_Select;
    private readonly InputAction m_Upgrade_Cancel;
    public struct UpgradeActions
    {
        private @PlayerInput m_Wrapper;
        public UpgradeActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Up => m_Wrapper.m_Upgrade_Up;
        public InputAction @Down => m_Wrapper.m_Upgrade_Down;
        public InputAction @Left => m_Wrapper.m_Upgrade_Left;
        public InputAction @Right => m_Wrapper.m_Upgrade_Right;
        public InputAction @Select => m_Wrapper.m_Upgrade_Select;
        public InputAction @Cancel => m_Wrapper.m_Upgrade_Cancel;
        public InputActionMap Get() { return m_Wrapper.m_Upgrade; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UpgradeActions set) { return set.Get(); }
        public void SetCallbacks(IUpgradeActions instance)
        {
            if (m_Wrapper.m_UpgradeActionsCallbackInterface != null)
            {
                @Up.started -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnDown;
                @Left.started -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnRight;
                @Select.started -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnSelect;
                @Cancel.started -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UpgradeActionsCallbackInterface.OnCancel;
            }
            m_Wrapper.m_UpgradeActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
            }
        }
    }
    public UpgradeActions @Upgrade => new UpgradeActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFastMove(InputAction.CallbackContext context);
        void OnLeftUp(InputAction.CallbackContext context);
        void OnRightUp(InputAction.CallbackContext context);
        void OnLeftDown(InputAction.CallbackContext context);
        void OnRightDown(InputAction.CallbackContext context);
        void OnSingleUp(InputAction.CallbackContext context);
        void OnSingleDown(InputAction.CallbackContext context);
    }
    public interface ICameraActions
    {
        void OnMove(InputAction.CallbackContext context);
    }
    public interface ICommonActions
    {
        void OnMainAction(InputAction.CallbackContext context);
        void OnMinorAction(InputAction.CallbackContext context);
        void OnMinorActionHold(InputAction.CallbackContext context);
        void OnAnyTargetSelection(InputAction.CallbackContext context);
    }
    public interface IPlayerKeyboardActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFastMove(InputAction.CallbackContext context);
        void OnSingleUp(InputAction.CallbackContext context);
        void OnSingleDown(InputAction.CallbackContext context);
        void OnVertFastMod(InputAction.CallbackContext context);
    }
    public interface IPlayerGamepadActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFastMove(InputAction.CallbackContext context);
        void OnLeftUp(InputAction.CallbackContext context);
        void OnRightUp(InputAction.CallbackContext context);
        void OnLeftDown(InputAction.CallbackContext context);
        void OnRightDown(InputAction.CallbackContext context);
    }
    public interface ICameraKeyboardActions
    {
        void OnMove(InputAction.CallbackContext context);
    }
    public interface ICameraGamepadActions
    {
        void OnMove(InputAction.CallbackContext context);
    }
    public interface ICommonKeyboardActions
    {
        void OnMainAction(InputAction.CallbackContext context);
        void OnMinorAction(InputAction.CallbackContext context);
        void OnMinorActionHold(InputAction.CallbackContext context);
        void OnAnyTargetSelection(InputAction.CallbackContext context);
        void OnBuild_1(InputAction.CallbackContext context);
        void OnBuild_2(InputAction.CallbackContext context);
        void OnBuild_3(InputAction.CallbackContext context);
        void OnBuild_4(InputAction.CallbackContext context);
        void OnBuild_5(InputAction.CallbackContext context);
        void OnBuild_6(InputAction.CallbackContext context);
        void OnAltBuild_1(InputAction.CallbackContext context);
        void OnAltBuild_2(InputAction.CallbackContext context);
        void OnAltBuild_3(InputAction.CallbackContext context);
        void OnAltBuild_4(InputAction.CallbackContext context);
        void OnAltBuild_5(InputAction.CallbackContext context);
        void OnAltBuild_6(InputAction.CallbackContext context);
        void OnTake(InputAction.CallbackContext context);
        void OnRescue(InputAction.CallbackContext context);
    }
    public interface ICommonGamepadActions
    {
        void OnMainAction(InputAction.CallbackContext context);
        void OnMinorAction(InputAction.CallbackContext context);
        void OnMinorActionHold(InputAction.CallbackContext context);
        void OnAnyTargetSelection(InputAction.CallbackContext context);
        void OnTake(InputAction.CallbackContext context);
        void OnRescue(InputAction.CallbackContext context);
    }
    public interface IViewportDebugActions
    {
        void OnChangePlayer1(InputAction.CallbackContext context);
        void OnChangePlayer2(InputAction.CallbackContext context);
        void OnChangeConfiguration(InputAction.CallbackContext context);
        void OnChangeOrientation(InputAction.CallbackContext context);
    }
    public interface IUpgradeActions
    {
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
    }
}
